@model nethloader.Utils.PaginatedList<nethloader.Models.Image>
@{
    ViewData["Title"] = "Gallery - " + User.Identity.Name;
}

<header class="user-header flex flex-full-center">
    <div class="inner-wrapper flex flex-sb">
        <a class="button button--primary c-pointer flex flex-full-center text--accent-contrast" data-dialogtrigger="upload" title="Upload an image">
        Upload&nbsp;<svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#upload"></use></svg>
        </a>
        <div class="user-header__user-dropdown__wrapper c-pointer" data-dropdownelement="user-menu" title="User menu">
            <div class="user-header__user-dropdown-trigger flex flex-cross-center">
                <svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#user-round"></use></svg>&nbsp;
                <span class="flex flex-dc">@User.Identity.Name<small class="text--secondary">16 files</small></span>&nbsp;
                <svg class="user-header__user-menu-icon" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#menu-down"></use></svg>
            </div>
            <div class="user-header__user-dropdown" data-dropdownid="user-menu">
                <ul class="user-header__user-dropdown__items">
                    <a href="/settings">
                        <li class="user-header__user-dropdown__item c-pointer">
                            <p><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#settings"></use></svg>&nbsp;User CP</p>
                        </li>
                    </a>
                    <li>
                        <form asp-controller="Account" asp-action="Logout" method="post" class="c-pointer">
                            <button type="submit" class="user-header__user-dropdown__item c-pointer"><p class="ta-l"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#exit"></use></svg>&nbsp;Logout</p></button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</header>
<div class="inner-wrapper flex flex-full-center flex-dc">
        @if (@Model.Count != 0)
        {
                <div class="paper-card paper-card--shadow2 paper-card--fw flex flex-full-center flex-sb flex-f1" id="user-gallery">
                    @foreach (var i in Model)
                    {
                        <div class="gallery-image flex flex-full-center flex-dc" id="@i.Id" data-src="@i.Url">
                            <div class="loader"></div>
                            <div class="gallery-image__data flex flex-dc flex-sb">
                                <p class="gallery-image__data__up-date flex flex-full-center flex-sb">@i.UploadDate.ToString("dd/MM/yyyy - HH:mm") <span class="gallery-image__data__delete c-pointer text--error" data-dialogtrigger="delete" data-delimageid="@i.Id" title="Delete this image (forever)"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#delete"></use></svg></span></p>
                                <a class="gallery-image__data__icons flex flex-full-center flex-dc" href="/image/view/@i.Id" rel="noopener">
                                    <svg class="big-icon" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#link"></use></svg>
                                    <p>View image</p>
                                </a>
                            </div>
                        </div>
                    }
                </div>
                <!--<div class="gallery__pagination flex flex-full-center">
                    @if (Model.HasPreviousPage)
            {
                        <a asp-route-page="@(Model.PageIndex - 1)" title="Previous page">
                            <span class="gallery__pagination__navigator pointer"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#arrow-left"></use></svg></span>
                        </a>
                    }
                    else
                    {
                        <span class="gallery__pagination__navigator disabled" title="No previous page available"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#arrow-left"></use></svg></span>
                    }
                    <ul class="flex flex-full-center">
                        @for (var i = 1; i <= Model.TotalPages; i++)
                        {
                            @if (Model.PageIndex == @i)
                            {
                                <li class="gallery__pagination-item current-page" title="You are here">@i</li>
                            }
                            else
                            {
                                <a asp-route-page="@i"><li class="gallery__pagination-item pointer" title="Page @i">@i</li></a>
                            }
                        }
                    </ul>
                    @if (Model.HasNextPage)
                    {
                        <a asp-route-page="@(Model.PageIndex + 1)">
                            <span class="gallery__pagination__navigator pointer" title="Next page"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#arrow-right"></use></svg></span>
                        </a>
                    }
                    else
                    {
                        <span class="gallery__pagination__navigator disabled" title="No next page available"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#arrow-right"></use></svg></span>
                    }
                </div>-->
        }
        else
        {
            <div class="flex flex-full-center flex-dc text--secondary">
                <svg class="big-icon" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#sad-face"></use></svg>
                <p class="text--title ta-c flex flex-dc flex-full-center">It looks like this page is empty</p>
                @if (!Model.HasNextPage && Model.PageIndex != 1)
                {
                    <a asp-route-page="1">
                        <span class="gallery__pagination__navigator pointer"><svg viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#arrow-right"></use></svg>Go back to the first page</span>
                    </a>
                }
            </div>
        }
    </div>

    <!-- Upload image dialog, standalone -->
    <div class="dialog__wrapper flex flex-full-center" data-dialogid="upload">
        <div class="dialog">
            @Html.Partial("../Image/Upload.cshtml")
        </div>
    </div>

    <!-- Delete image dialog, standalone -->
    <div class="dialog__wrapper flex flex-full-center" data-dialogid="delete">
        <div class="dialog">
            @Html.Partial("../Image/Delete.cshtml")
        </div>
    </div>

<!-- Script loaded here for encapsulation purposes -->
<script async>
    var gallery = document.getElementById('user-gallery');
    if (gallery && gallery.hasChildNodes()) {
        galleryImagesContainers = gallery.children;
        for(let i = galleryImagesContainers.length - 1; i >= 0; i--) {
            let curImg = new Image();
            curImg.classList.add("user-gallery__image");
            curImg.src = galleryImagesContainers[i].dataset.src;
            curImg.onload = () => {
                galleryImagesContainers[i].removeChild(galleryImagesContainers[i].children[0]);
                galleryImagesContainers[i].insertBefore(curImg, galleryImagesContainers[i].firstChild);
            }
        }
    }
</script>